name: Build and Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      gilgoblin-database:
        image: nickreinlein/gilgoblin-database
        env:
          POSTGRES_DB: gilgoblin_db
          POSTGRES_USER: gilgoblin
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd "pg_isready -h gilgoblin-database -d gilgoblin_db -U gilgoblin"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --health-start-period 10s

    steps:
      - uses: actions/checkout@v4

      - name: Cache NuGet Packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Setup .NET8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Install Postgres client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Wait for Database
        run: |
          for i in {1..20}; do
            if pg_isready -h gilgoblin-database -d gilgoblin_db -p 5432 -U gilgoblin; then
              echo "Database is ready!"
              exit 0
            else
              echo "Waiting for database... ($i/20)"
              sleep 3
            fi
          done
          echo "Database did not become ready in time."
          exit 1

      - name: Test
        env:
          ConnectionStrings__GilGoblinDbContext: ${{ secrets.DB_CONNECTION_STRING }}
        run: dotnet test --no-build --verbosity normal